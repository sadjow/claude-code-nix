name: Update Claude Code Version

on:
  schedule:
    - cron: '0 * * * *'  # Run every hour
  workflow_dispatch:  # Allow manual trigger

permissions:
  contents: write
  pull-requests: write

jobs:
  check-and-update:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Nix
        uses: cachix/install-nix-action@v24
        with:
          nix_path: nixpkgs=channel:nixos-unstable
          extra_nix_config: |
            experimental-features = nix-command flakes
            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}

      - name: Check for updates
        id: check
        run: |
          # Use the update script to check for updates
          if ./scripts/update-version.sh --check; then
            echo "update_needed=false" >> $GITHUB_OUTPUT
          else
            # Extract versions from script output
            CURRENT_VERSION=$(sed -n 's/.*version = "\([^"]*\)".*/\1/p' package.nix | head -1)
            LATEST_VERSION=$(npm view @anthropic-ai/claude-code version 2>/dev/null || curl -s https://registry.npmjs.org/@anthropic-ai/claude-code/latest | sed -n 's/.*"version":"\([^"]*\)".*/\1/p')
            
            echo "current=$CURRENT_VERSION" >> $GITHUB_OUTPUT
            echo "latest=$LATEST_VERSION" >> $GITHUB_OUTPUT
            echo "update_needed=true" >> $GITHUB_OUTPUT
          fi

      - name: Update version and hash
        if: steps.check.outputs.update_needed == 'true'
        run: |
          # Run the update script
          ./scripts/update-version.sh

      - name: Create Pull Request
        if: steps.check.outputs.update_needed == 'true'
        id: create-pr
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "chore: update claude-code to version ${{ steps.check.outputs.latest }}"
          title: "chore: update claude-code to version ${{ steps.check.outputs.latest }}"
          body: |
            ## Automated Claude Code Update
            
            This PR updates Claude Code from version `${{ steps.check.outputs.current }}` to `${{ steps.check.outputs.latest }}`.
            
            ### Changes
            - Updated `version` in `package.nix`
            - Updated `sha256` hash for the npm tarball
            - Updated `flake.lock`
            
            ### Verification
            - ✅ Version number updated in `package.nix`
            - ✅ Tarball hash automatically calculated and updated
            - ✅ Build verified during CI
            - ✅ All changes automated via update script
            
            ---
            
            To test this update locally:
            ```bash
            nix build
            ./result/bin/claude --version
            ```
            
            This PR was automatically generated by the update workflow.
          branch: update-claude-code-${{ steps.check.outputs.latest }}
          delete-branch: true
          labels: |
            dependencies
            automated
      
      - name: Enable Auto-Merge
        if: steps.check.outputs.update_needed == 'true' && steps.create-pr.outputs.pull-request-number
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh pr merge ${{ steps.create-pr.outputs.pull-request-number }} --auto --squash --delete-branch

      - name: Summary
        if: always()
        run: |
          echo "## Update Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ steps.check.outputs.update_needed }}" == "true" ]; then
            echo "- **Current Version:** ${{ steps.check.outputs.current }}" >> $GITHUB_STEP_SUMMARY
            echo "- **Latest Version:** ${{ steps.check.outputs.latest }}" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "✅ Pull request created for version update!" >> $GITHUB_STEP_SUMMARY
          else
            CURRENT_VERSION=$(sed -n 's/.*version = "\([^"]*\)".*/\1/p' package.nix | head -1)
            echo "- **Current Version:** $CURRENT_VERSION" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "✅ Already up to date!" >> $GITHUB_STEP_SUMMARY
          fi
